{"version":3,"sources":["components/header/index.js","components/header/header.js","services/swapi-service.js","components/spinner/index.js","components/spinner/spinner.js","components/error-block/dead-star.png","components/error-block/index.js","components/error-block/error-block.js","components/card-block/card-block.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/toggle-Button/index.js","components/toggle-Button/toggle-button.js","components/item-list/item-list.js","components/item-list/index.js","components/hoc/index.js","components/hoc/hoc.js","components/person-details/person-details.js","components/person-details/index.js","components/start-page/index.js","components/start-page/start-page.js","components/back-button/index.js","components/back-button/back-button.js","components/btn-arrow/btn-arrow.js","components/btn-arrow/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","useState","people","setPeople","planets","setPlanets","starship","setStarship","header","setHeader","addClass","e","target","textContent","className","to","onClick","SwapiService","_apiBase","_apiImgBase","cutId","url","replace","getResource","a","fetch","res","ok","Error","status","json","getAllPeople","arr","i","then","push","results","map","item","transformPerson","getPerson","id","getAllPlanets","transformPlanet","getPlanet","getAllStarships","transformShip","getStarship","catch","err","console","log","getPersonImg","getPlanetImg","getImg","type","Promise","resolve","reject","img","Image","dir","onload","onerror","src","name","population","rotation_period","diameter","orbital_period","climate","gravity","terrain","surface_water","this","loading","error","passengers","max_atmosphering_speed","manufacturer","length","cost_in_credits","crew","consumables","hyperdrive_rating","MGLT","starship_class","gender","height","mass","hair_color","skin_color","eye_color","birth_year","homeworld","Spinner","ErrorBlock","alt","icon","Person","props","value","setValue","val","useEffect","Planet","Staship","RandomPlanet","swapiService","state","componentDidMount","updatePlanet","timer","setInterval","time","componentWillUnmount","clearInterval","onError","setState","Math","floor","random","spinner","result","errorBlock","React","Component","defaultProps","Block","path","setPath","ToggleButton","func","toggleValue","text","clazz","ItemList","fleng","personList","insertTxt","children","image","setImage","Hoc","callback","PersonDetails","getPersons","pers","componentDidUpdate","prevProps","data","spin","BlockValue","render","StartPage","enter","setEnter","class","BackButton","BtnArrow","maxleng","Prev","n","Next","App","toggleBtnPln","setToggleBtnPln","persLng","setPersonlng","planetLng","setPlanetlng","starshipLng","setStarshiplng","toggleRandomPlanet","itemLength","planetDetails","undefined","characterOptions","planetOptions","starshipOptions","characterBlock","planetBlock","starshipBlock","basename","exact","component","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.899d4a54.chunk.js","sourcesContent":["import Header from './header';\r\nexport default Header;","import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './header.css';\r\n\r\nconst Header =()=>{\r\n  const[people,setPeople]=useState(false);\r\n  const[planets,setPlanets]=useState(false);\r\n  const[starship,setStarship]=useState(false);\r\n  const[header,setHeader]=useState(true);\r\n\r\n  const addClass=(e)=>{\r\n    if(e.target.textContent==='Characters'){\r\n      setPeople(true);;\r\n      setPlanets(false)\r\n      setStarship(false);\r\n      setHeader(false);\r\n    }else if(e.target.textContent==='Planets'){\r\n      setPeople(false);\r\n      setPlanets(true);\r\n      setStarship(false);\r\n      setHeader(false);\r\n    }else if(e.target.textContent==='Starships'){\r\n      setPeople(false);\r\n      setPlanets(false);\r\n      setStarship(true);\r\n      setHeader(false);\r\n    }else{\r\n      setHeader(true);\r\n      setPeople(false);\r\n      setPlanets(false);\r\n      setStarship(false);\r\n    }\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark nav-size-bar\">\r\n \r\n    <Link to=\"/home/\"><h1 onClick={addClass} className={`navbar-brand ${header?'visited':''}`}>Star wars DB</h1></Link>\r\n\r\n  <div className=\"collapse navbar-collapse\" >\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className={`nav-item  link ${people?'visited':''}`} onClick={addClass}>\r\n        <Link to=\"/home/people\">Characters</Link>\r\n      </li>\r\n      <li className={`nav-item  link ${planets?'visited':''}`}  onClick={addClass}>\r\n        <Link to=\"/home/planets\">Planets</Link>\r\n      </li>\r\n      <li className={`nav-item  link ${starship?'visited':''}`}  onClick={addClass}>\r\n        <Link to=\"/home/starships\">Starships</Link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n        </>\r\n    )\r\n}\r\nexport default Header;","\r\n\r\nexport default class SwapiService {\r\n\r\n    _apiBase = 'https://swapi.dev/api';\r\n\r\n  _apiImgBase ='https://starwars-visualguide.com/assets/img/'\r\n\r\n    cutId=(url)=>{\r\n      let res=url.replace(/\\D/g,'');\r\n      return res;\r\n    }\r\n \r\n    getResource=async(url)=>{\r\n     const res = await fetch(`${this._apiBase}${url}`);\r\n \r\n     if(!res.ok){\r\n       throw new Error(`Could not fetch ${url}, received ${res.status}`);\r\n     }\r\n       return await res.json();\r\n     }\r\n \r\n     getAllPeople=async()=>{\r\n       let arr=[];\r\n       for(let i=1;i<=8;i++){\r\n        await this.getResource(`/people/?page=${i}`).then(res=>arr.push(...res.results.map(item=>this.transformPerson(item))));\r\n       }\r\n       return await arr;\r\n     }\r\n \r\n     getPerson=(id)=>{\r\n      return this.getResource(`/people/${id}/`).then((res)=>this.transformPerson(res));\r\n     }\r\n \r\n     getAllPlanets=async()=>{\r\n       let arr =[];\r\n       for(let i =1 ;i<=6;i++){\r\n        await this.getResource(`/planets/?page=${i}`).then(res=>arr.push(...res.results.map(item=>this.transformPlanet(item))));\r\n       }\r\n       return arr;\r\n      }\r\n \r\n     getPlanet=(id)=>{\r\n      return this.getResource(`/planets/${id}/`).then((res)=>this.transformPlanet(res));\r\n     }\r\n \r\n     getAllStarships=async()=>{\r\n       let arr=[];\r\n       for(let i=1;i<=4;i++){\r\n        await this.getResource(`/starships/?page=${i}`).then(res=>arr.push(...res.results.map(item=>this.transformShip(item))));\r\n       }\r\n       return await arr;\r\n      }\r\n \r\n     \r\n     getStarship=(id)=>{\r\n       return  this.getResource(`/starships/${id}/`).then(res=>this.transformShip(res)).catch((err)=>console.log(err))\r\n     }\r\n\r\n     getPersonImg=(id)=>{\r\n       return `https://starwars-visualguide.com/assets/img/characters/${id}.jpg`\r\n     }\r\n     getPlanetImg=(id)=>{\r\n      return `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`\r\n    }\r\n    getImg=(id,type)=>{\r\n      \r\n      return  new Promise((resolve,reject)=>{\r\n        const img = new Image();\r\n        const dir = type==='person'?'characters':type==='planet'? 'planets':'starships';\r\n\r\n        img.onload = ()=> resolve(`${this._apiImgBase}${dir}/${id}.jpg`);\r\n        img.onerror = ()=> reject('https://fv2-2.failiem.lv/thumb_show.php?i=4qvrkjyq&view')\r\n        img.src = `${this._apiImgBase}${dir}/${id}.jpg`;\r\n      });\r\n  \r\n    }\r\n    \r\n    \r\n\r\n      transformPlanet({name,population,rotation_period,diameter,url,orbital_period,climate,gravity,terrain,surface_water}){\r\n      \r\n        return {\r\n                id:this.cutId(url),\r\n                name,\r\n                population,\r\n                rotation_period,\r\n                diameter,\r\n                orbital_period,\r\n                climate,\r\n                gravity,\r\n                terrain,\r\n                surface_water,\r\n                img:`${this._apiImgBase}planets/${this.cutId(url)}.jpg`,\r\n                loading:true,\r\n                error:false\r\n        }\r\n     }\r\n\r\n     transformShip({name,passengers,max_atmosphering_speed,manufacturer,length,url,\r\n      cost_in_credits,crew,consumables,hyperdrive_rating,MGLT,starship_class,}){\r\n       return{\r\n         id:this.cutId(url),\r\n         name,\r\n         passengers,\r\n         max_atmosphering_speed,\r\n         manufacturer,\r\n         length,\r\n         cost_in_credits,\r\n         crew,\r\n         consumables,\r\n         hyperdrive_rating,\r\n         MGLT,\r\n         starship_class,\r\n         img:`${this._apiImgBase}starships/${this.cutId(url)}.jpg`,\r\n         loading:true,\r\n         error:false\r\n       }\r\n     }\r\n\r\n     transformPerson({name,gender,height,mass,url,hair_color,skin_color,eye_color,birth_year,homeworld}){\r\n       return{\r\n        id:this.cutId(url),\r\n        name,\r\n        gender,\r\n        height,\r\n        mass,\r\n        hair_color,\r\n        skin_color,\r\n        eye_color,\r\n        birth_year,\r\n        homeworld:this.cutId(homeworld),\r\n        img:`${this._apiImgBase}characters/${this.cutId(url)}.jpg`,\r\n        loading:true,\r\n        error:false\r\n       }\r\n     }\r\n }\r\n \r\n\r\n//  let asda = new SwapiService().getPerson(1).then((res)=>console.log(res));\r\n\r\n","import Spinner from './spinner';\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner =()=>{\r\n    return(\r\n        \r\n            <div className=\"loadingio-spinner-double-ring-xlpr4d9uj77\"><div className=\"ldio-cp8lp2d2rgp\">\r\n                <div></div>\r\n                <div></div>\r\n                <div><div></div></div>\r\n                <div><div></div></div>\r\n            </div></div>\r\n       \r\n    )\r\n}\r\nexport default Spinner;\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/dead-star.689861e1.png\";","import ErrorBlock from './error-block';\r\nexport default ErrorBlock;","import React from 'react';\r\nimport './error-block.css';\r\nimport icon from './dead-star.png';\r\n\r\nconst ErrorBlock=()=>{\r\n    return(\r\n        \r\n        <div className=\"error-block\">\r\n        <img className=\"error-size img-move\" alt='Dead Star' src={icon}></img>\r\n        <h3 className=\"error-text\">404</h3>\r\n        <h4 className=\"error-text\"> Мы выслали дронов для починки этого модуля</h4>\r\n        \r\n        </div>\r\n    \r\n       \r\n    )\r\n}\r\n\r\nexport default ErrorBlock;","import React, {useState,useEffect} from 'react';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport './card-block.css';\r\n\r\n\r\n\r\nconst Person =(props)=>{\r\n    const [value,setValue]=useState('loading ...');\r\n\r\n    const {gender,height,mass,hair_color,skin_color,eye_color,birth_year,homeworld}=props.val;\r\n\r\n    useEffect(()=>{\r\n    const swappi = new SwapiService();\r\n    swappi.getPlanet(homeworld).then(({name})=>setValue(name))\r\n   },[homeworld]);\r\n    \r\n    return(\r\n        <ul className=\"list-group list-group-flush \">\r\n                <li className=\"list-group-item big\">{`Gender : `}<span className=\"br\">{gender}</span></li>\r\n                <li className=\"list-group-item big\">{`Height : `}<span className=\"br\">{`${height} cm`}</span></li>\r\n                <li className=\"list-group-item big\">{`Weight : `}<span className=\"br\">{`${mass} kg`}</span></li>\r\n                <li className=\"list-group-item big\">{`Hair color : `}<span className=\"br\">{hair_color}</span></li>\r\n                <li className=\"list-group-item big\">{`Skin color : `}<span className=\"br\">{skin_color}</span></li>\r\n                <li className=\"list-group-item big\">{`Eye color : `}<span className=\"br\">{eye_color}</span></li>\r\n                <li className=\"list-group-item big\">{`Birth year : `}<span className=\"br\">{birth_year}</span></li>\r\n                <li className=\"list-group-item big\">{`Homeworld : `}<span className=\"br\">{value}</span></li>\r\n            </ul>\r\n    )\r\n};\r\n\r\nconst Planet =(props)=>{\r\n    const {population,rotation_period,diameter,orbital_period,climate,gravity,terrain,surface_water}=props.val;\r\n    return(\r\n        <ul className=\"list-group list-group-flush \">\r\n                <li className=\"list-group-item big\">{`Population : `}<span className=\"br\">{population}</span></li>\r\n                <li className=\"list-group-item big\">{`Rotation period : `}<span className=\"br\">{rotation_period}</span></li>\r\n                <li className=\"list-group-item big\">{`Diameter : `}<span className=\"br\">{diameter}</span></li>\r\n                <li className=\"list-group-item big\">{`Orbital period : `}<span className=\"br\">{orbital_period}</span></li>\r\n                <li className=\"list-group-item big\">{`Climate : `}<span className=\"br\">{climate}</span></li>\r\n                <li className=\"list-group-item big\">{`Gravity : `}<span className=\"br\">{gravity}</span></li>\r\n                <li className=\"list-group-item big\">{`Terrain : `}<span className=\"br\">{terrain}</span></li>\r\n                <li className=\"list-group-item big\">{`Surface_water : `}<span className=\"br\">{surface_water}</span></li>\r\n            </ul>\r\n    )\r\n};\r\n\r\nconst Staship =(props)=>{\r\n    const {passengers,max_atmosphering_speed,manufacturer,cost_in_credits,crew,consumables,hyperdrive_rating,MGLT,starship_class}=props.val;\r\n    return(\r\n        <ul className=\"list-group list-group-flush \">\r\n                <li className=\"list-group-item big\">{`Passengers : `}<span className=\"br\">{passengers}</span></li>\r\n                <li className=\"list-group-item big\">{`Max atmosphering speed : `}<span className=\"br\">{max_atmosphering_speed}</span></li>\r\n                <li className=\"list-group-item big\">{`Manufacturer : `}<span className=\"br\">{manufacturer}</span></li>\r\n                <li className=\"list-group-item big\">{`Cost in credits :  `}<span className=\"br\">{cost_in_credits}</span></li>\r\n                <li className=\"list-group-item big\">{`Crew :  `}<span className=\"br\">{crew}</span></li>\r\n                <li className=\"list-group-item big\">{`Consumables :  `}<span className=\"br\">{consumables}</span></li>\r\n                <li className=\"list-group-item big\">{`Hyperdrive_rating :  `}<span className=\"br\">{hyperdrive_rating}</span></li>\r\n                <li className=\"list-group-item big\">{`MGLT :  `}<span className=\"br\">{MGLT}</span></li>\r\n                <li className=\"list-group-item big\">{`Starship class : `}<span className=\"br\">{starship_class}</span></li>\r\n            </ul>\r\n    )\r\n};\r\nexport {Person,Planet,Staship};","import React from 'react';\r\nimport './random-planet.css';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Spinner from '../spinner';\r\nimport ErrorBlock from '../error-block';\r\nimport {useState} from 'react';\r\nimport {Planet} from '../card-block';\r\n\r\n\r\nexport default class RandomPlanet extends React.Component{\r\n\r\n    swapiService = new SwapiService();\r\n\r\n    static defaultProps ={\r\n        time:3000\r\n    }\r\n    \r\n    static propTypes ={\r\n        time:(props,propName,componentName)=>{\r\n            const value =props[propName];\r\n            if(typeof value !=='number'){\r\n                return new TypeError(`${componentName} prop error`)\r\n            };\r\n        }\r\n    }\r\n\r\n    state={\r\n        id:null,\r\n        name:null,\r\n        population: null,\r\n        rotation_period:null,\r\n        diameter:null,\r\n        loading:false,\r\n        error:false\r\n    }\r\n    timer;\r\n    componentDidMount=()=>{\r\n        this.updatePlanet();\r\n        this.timer= setInterval(this.updatePlanet,this.props.time);\r\n    }\r\n    componentWillUnmount=()=>{\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    onError =(err)=>{\r\n        this.setState({error:true,loading:false})\r\n    };\r\n\r\n    updatePlanet=()=>{\r\n        this.setState({loading:false});\r\n        const id=Math.floor(Math.random()*25+2);\r\n      \r\n        this.swapiService.getPlanet(id)\r\n        .then((res)=>{\r\n            console.log(res)\r\n            this.setState(res);\r\n        })\r\n        .catch(this.onError);\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        \r\n        const {loading,error} = this.state;\r\n        const spinner = loading===false&&error===false?<Spinner/>:null;\r\n        const result = loading? <Block res={this.state}/>:null;\r\n        const errorBlock = error? <ErrorBlock/>:null;\r\n\r\n        return(\r\n            <>\r\n            <div className=\"card planet-card \">\r\n                {result}\r\n                {spinner}\r\n                {errorBlock}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nconst Block=(props)=>{\r\n    const [path,setPath]= useState();\r\n   \r\n    const {id,name}=props.res;\r\n    const swapiService = new SwapiService();\r\n\r\n    swapiService.getImg(id,'planet')\r\n    .then(res=>setPath(res)).catch(err=>setPath(err));\r\n    \r\n    return(\r\n        <>\r\n               <h3 className=\"card-header\">{name}</h3>\r\n            <div className=\"parent\">\r\n            <div className=\" list-planet\">\r\n                    <img className=\"img\" src={path} alt=\"Planets\"></img>\r\n                </div>\r\n                <div className=\"d-block user-select-none list-text\">\r\n                <Planet val={props.res}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import RandomPlanet from './random-planet';\r\nexport default RandomPlanet;","import ToggleButton from './toggle-button';\r\nexport default ToggleButton;","import React from 'react';\r\nimport './toggle-button.css';\r\n\r\nconst ToggleButton =({func,toggleValue})=>{\r\n\r\n    const text=toggleValue?'Close block random planet':'Open block random planet';\r\n    const clazz = toggleValue?`btn btn-warning btn-lg btn-block tgb-size`:`btn btn-warning btn-lg btn-block tgb-size tgl-marg`;\r\n    return(\r\n        <div>\r\n            <button onClick={func} className={clazz}>{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToggleButton;","import React,{useState} from 'react';\r\nimport './item-list.css';\r\nimport Spinner from '../spinner/';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport SwapiService from '../../services/swapi-service';\r\n\r\n\r\nexport default class ItemList extends React.Component{\r\nstate={\r\n    res:[],\r\n    loading:false\r\n}\r\n\r\nstatic propTypes ={\r\n    func:PropTypes.func,\r\n    choice:PropTypes.func,\r\n    type:PropTypes.string\r\n}\r\n\r\ncomponentDidMount=()=>{\r\n    this.getPerson();\r\n}\r\ncomponentDidUpdate(){\r\n    const{fleng,type}=this.props;\r\n    fleng(this.state.res,type);\r\n}\r\n\r\n\r\ngetPerson=()=>{\r\n    const {func} = this.props;\r\n    func()\r\n    .then(res=>{\r\n       this.setState(()=>{return{res,loading:true}})\r\n    });\r\n}\r\n\r\n\r\n\r\n    render(){\r\n        const {res,loading}=this.state;\r\n        const {type}= this.props;\r\n        \r\n\r\n        const personList=res.map((item)=>{\r\n            const {id} =item;\r\n            const insertTxt= this.props.children(item);\r\n            const path = type==='starship'? `starships/${id}`: type==='planet'? `planets/${id}`: `people/${id}`;\r\n            return(\r\n                   \r\n                    <li key={id}  className=\"list-group-item lists li-cascad\">\r\n                    <Link to={path} >\r\n                    <Block id={id} type={type} insertTxt={insertTxt}/>\r\n                    </Link>\r\n                    </li>\r\n            )\r\n        });\r\n      \r\n\r\n\r\n\r\n        const result = loading? personList : null;\r\n        const spinner = loading? null : <Spinner/>;\r\n\r\n        return(\r\n            <>\r\n            <div className=\"item-list-size\">\r\n                <ul className=\"list-group list-group-flush container\">\r\n                   {result} \r\n                   {spinner}\r\n                </ul>\r\n            </div>\r\n                \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst Block=(props)=>{\r\n    const {id,type,insertTxt}=props;\r\n    const [image,setImage]=useState();\r\n    new SwapiService().getImg(id,type)\r\n    .then(res=>setImage(res)).catch(err=>setImage(err));\r\n    return (\r\n                    <>\r\n                    <div className='txt-list-block'>{insertTxt}</div> \r\n                    <div className='cont-img'>\r\n                    <img className='img-list-size' src={image} alt='person'></img>\r\n                    </div>\r\n                    </>\r\n    )\r\n\r\n}","import ItemList from './item-list';\r\nexport default ItemList;","import Hoc from './hoc';\r\nexport default Hoc;","import React from 'react';\r\nimport ItemList from '../item-list/';\r\n\r\n\r\n\r\nconst Hoc =({func,img,type,fleng})=>{\r\n        return (callback)=>{\r\n            return(\r\n                \r\n                <ItemList func={func}  img={img} type={type} fleng={fleng}> \r\n                {callback} \r\n                </ItemList>\r\n                \r\n            )\r\n        }\r\n    \r\n}\r\nexport default Hoc;\r\n\r\n\r\n","import React ,{useState} from 'react';\r\nimport './person-details.css';\r\nimport Spinner from '../spinner/';\r\nimport {Person,Planet,Staship} from '../card-block/';\r\n\r\nexport default class PersonDetails extends React.Component{\r\n\r\n    state={loading:false};\r\n\r\n    componentDidMount=()=>{\r\n        this.getPersons(this.props.pers)\r\n    }\r\n\r\n    componentDidUpdate=(prevProps)=>{\r\n        const {pers} =this.props;\r\n        if(prevProps.pers!==pers){\r\n            this.getPersons(pers)\r\n        }\r\n    }\r\n\r\n    getPersons=(id)=>{\r\n        const{data}=this.props;\r\n        this.setState({loading:false});\r\n        data(id)\r\n        .then(res=>{\r\n            this.setState(res);\r\n        }).catch((error)=>{\r\n            console.log('error');\r\n        });\r\n    }\r\n\r\n    render(){ \r\n        const{loading}=this.state;\r\n        const{img,type}=this.props;\r\n        const spin =loading ? null : <Spinner/>;\r\n        const personList = loading ? <BlockValue value={this.state} img={img} type={type}/> : null;\r\n        \r\n        return(\r\n            <>\r\n            <div className=\"card planet-card \">\r\n            {personList}\r\n            {spin}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst BlockValue=(props)=>{\r\n    const {id,name}=props.value;\r\n    const {img,type}=props;\r\n\r\n    const [path,setPath] = useState();\r\n\r\n    img(id,type).then(res=>setPath(()=>res)).catch(err=>setPath(()=>err))\r\n\r\n    const render=type==='person'? <Person val={props.value}/> : type==='planet'? <Planet val={props.value}/> : <Staship val={props.value}/>;\r\n    return(\r\n        <>\r\n        <h3 className=\"card-header\">{name}</h3>\r\n        <div className=\"parent\">\r\n        <div className=\" list-planet\">\r\n                <img className=\"img\" alt=\"Person\" src={path}></img>\r\n            </div>\r\n            <div className=\"d-block user-select-none list-text\">\r\n                {render}\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n","import PersonDetails from './person-details';\r\nexport default PersonDetails;","import StartPage from './start-page';\r\nexport default StartPage;","import React, {useState} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport  './start-page.css';\r\n\r\nconst StartPage=()=>{\r\n    const [enter,setEnter] = useState(false);\r\n\r\n    if(enter){\r\n        return <Redirect to='/home/'/>\r\n    }\r\n    return(\r\n        <>\r\n        <div class=\"fade\"></div>\r\n\r\n        <section class=\"star-wars\">\r\n          <div class=\"crawl\">\r\n            <div class=\"title\">\r\n              <p>Episode II</p>\r\n              <h1>Star Wars Data Base</h1>\r\n            </div>\r\n            \r\n            <p>This site is an educational project written in the library react</p>\r\n\r\n              \r\n              <p>A long time ago in a galaxy far, far away.…</p>\r\n        \r\n            <p>\r\nthis database was created in agony and suffering. when trying to get experience and understand how HOC works, what render props are, why new hooks rule...</p>\r\n<p>\r\nSearches in the comments for what concept better led me to the war field. The strongest struck opponents with arguments, the weak fought back with insults. Who is right and who started this war...</p>\r\n          </div>\r\n          <button className='open' onClick={()=>setEnter(true)}>Enter</button>\r\n        </section>\r\n       \r\n       \r\n        </>\r\n    )\r\n}\r\nexport default StartPage;","import BackButton from './back-button';\r\nexport default BackButton;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './back-button.css';\r\n\r\nconst BackButton =(props)=>{\r\nconst{path}=props;\r\n    return(\r\n        <div className=\"div-back\">\r\n        <Link to={path}><button type=\"button\" className=\"btn btn-primary btn-lg btn-back\">◄\t Back</button></Link>\r\n        </div>\r\n    )\r\n}\r\nexport default BackButton;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './btn-arrow.css';\r\n\r\nconst BtnArrow =(props)=>{\r\nconst {id,path,maxleng} = props;\r\n    return(\r\n        <div className=\"btn-bl btn-container\">\r\n        \r\n            <Prev id={id} path={path} maxleng={maxleng}/>\r\n            <Next id={id} path={path} maxleng={maxleng}/>\r\n        \r\n        </div>\r\n    )\r\n}\r\nexport default BtnArrow;\r\n\r\n\r\nconst Prev =(props)=>{\r\n    const {id,path,maxleng} = props;\r\n    let n = +id-1;\r\n    if(n<1){\r\n        n=maxleng;\r\n    }\r\n    if(path==='/home/starships/'&&n<2){\r\n        n=maxleng;\r\n    }\r\n    return  <Link to={`${path}${n}`}><button className=\"bottom-btn\">Prev</button></Link>\r\n}\r\n\r\nconst Next =(props)=>{\r\n    const {id,path,maxleng} = props;\r\n    let n = +id+1;\r\n    if(n>maxleng){\r\n        n=1\r\n    }\r\n    if(path==='/home/starships/'&&n===1){\r\n        n=2;\r\n    }\r\n    return  <Link to={`${path}${n}`}><button className=\"bottom-btn\">Next</button></Link>\r\n}","import BtnArrow from './btn-arrow';\r\nexport default BtnArrow;","import App from './app';\r\nexport default App;","import React,{useState} from 'react';\r\nimport Header from '../header/';\r\nimport RandomPlanet from '../random-planet';\r\nimport ToggleButton from '../toggle-Button/';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Hoc from '../hoc/';\r\nimport  {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport PersonDetails from '../person-details/';\r\nimport StartPage from '../start-page/';\r\nimport BackButton from '../back-button/';\r\nimport BtnArrow from '../btn-arrow/';\r\nimport './app.css';\r\n\r\n\r\nconst App =()=>{\r\n\r\n    const [toggleBtnPln, setToggleBtnPln] = useState(true);\r\n    const [persLng, setPersonlng] = useState();\r\n    const [planetLng, setPlanetlng] = useState();\r\n    const [starshipLng, setStarshiplng] = useState();\r\n    const swapiService = new SwapiService();\r\n\r\n    const toggleRandomPlanet=()=>{\r\n        setToggleBtnPln(()=>!toggleBtnPln);\r\n    }\r\n\r\n    const itemLength=(item,type)=>{\r\n        if(type==='person'){\r\n            setPersonlng(()=>item.length);\r\n        }\r\n        if(type==='planet'){\r\n            setPlanetlng(()=>item.length);\r\n        }else{\r\n            setStarshiplng(()=>item.length);\r\n        }\r\n    }\r\n\r\n\r\n    const planetDetails = toggleBtnPln? <RandomPlanet time={undefined}/>:null;\r\n\r\n    const characterOptions={\r\n        func:swapiService.getAllPeople,\r\n        img:swapiService.getImg,\r\n        type:'person',\r\n        fleng:itemLength\r\n    };\r\n    const planetOptions={\r\n        func:swapiService.getAllPlanets,\r\n        img:swapiService.getImg,\r\n        type:'planet',\r\n        fleng:itemLength\r\n    };\r\n    \r\n    const starshipOptions={\r\n        func:swapiService.getAllStarships,\r\n        img:swapiService.getImg,\r\n        type:'starship',\r\n        fleng:itemLength\r\n    };\r\n\r\n    const characterBlock=Hoc(characterOptions)(({name,gender})=>`${name} ( ${gender} )`);\r\n    const planetBlock = Hoc(planetOptions)(({name,diameter})=>`${name} ( ${diameter} )`);\r\n    const starshipBlock = Hoc(starshipOptions)(({name,max_atmosphering_speed})=>`${name} ( ${max_atmosphering_speed} )`);\r\n    \r\n    return (\r\n        \r\n        <Router basename=\"/\">\r\n            \r\n            <Route path=\"/\" exact component={StartPage}/>\r\n           <Route path=\"/home/\" component={Header}/>\r\n            <Route path=\"/home/\" exact  render={()=>{\r\n                return(\r\n                    <>\r\n                    {planetDetails}\r\n                    <ToggleButton func={toggleRandomPlanet} toggleValue={toggleBtnPln}/>\r\n                    </>\r\n                )\r\n            }}/>\r\n            <Route path=\"/home/people/\" exact  render={()=>characterBlock}/>\r\n            <Route path=\"/home/people/:id\"  render={({match})=>{\r\n                 return (\r\n                     <>\r\n                        <BackButton path={'/home/people'}/>\r\n                        <PersonDetails pers={match.params.id} img={swapiService.getImg} data={swapiService.getPerson} type={'person'}/>\r\n                        <BtnArrow id={match.params.id} path={'/home/people/'} maxleng={persLng+1}/>\r\n                    </>\r\n                 )\r\n                }}/>\r\n\r\n            <Route path=\"/home/planets/\" exact render={()=>planetBlock}/>\r\n            <Route path=\"/home/planets/:id\"  render={({match})=>{\r\n                 return( \r\n                <>\r\n                <BackButton path={'/home/planets'}/>\r\n                <PersonDetails pers={match.params.id} img={swapiService.getImg} data={swapiService.getPlanet} type={'planet'}/> \r\n                <BtnArrow id={match.params.id} path={'/home/planets/'} maxleng={planetLng}/>\r\n                </>\r\n                 )}}/>\r\n\r\n            <Route path=\"/home/starships/\" exact render={()=>starshipBlock}/>\r\n            <Route path=\"/home/starships/:id\" render={({match})=>{ \r\n           return (\r\n           <>\r\n           <BackButton path={'/home/starships'}/>\r\n           <PersonDetails pers={match.params.id} img={swapiService.getImg} data={swapiService.getStarship} type={'starship'}/>\r\n           <BtnArrow id={match.params.id} path={'/home/starships/'} maxleng={starshipLng}/>\r\n           </>\r\n           )\r\n           }}/>\r\n\r\n        </Router>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/';\n\nReactDOM.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}